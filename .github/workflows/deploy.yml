name: Deploy Logger Service

on:
  push:
    branches:
      - main  # Деплой выполняется при пуше в main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонируем код
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Устанавливаем Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      # Шаг 3: Устанавливаем зависимости
      - name: Install dependencies
        run: npm install

      # Шаг 4: Собираем проект в папку dist
      - name: Build project
        run: |
          mkdir -p dist &&
          node esbuild.js

      - name: Check if files exist
        run: |
          ls -al ./dist
          ls -al ./package.json

      # Шаг 5: Копируем dist и package.json на сервер
      - name: Deploy dist and package.json
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: './dist/* ./package.json'
          target: '/root/shared/logger'
          port: 22
          debug: true

      # Шаг 6: Устанавливаем production-зависимости и минифицируем node_modules на сервере
      - name: Install production dependencies and clean node_modules
        run: |
          echo "${{ secrets.SSH_KEY }}" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
          cd /root/shared/logger &&
          npm install --omit=dev &&
          npx modclean --run &&
          find node_modules -type f \( -name '*.md' -o -name '*.ts' -o -name 'test*' -o -name '*.map' \) -delete"

      # Шаг 7: Перезапускаем сервис
      - name: Restart logger service
        run: |
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "sudo systemctl restart gs_service-logger"